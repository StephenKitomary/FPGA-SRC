$date
	Tue Nov  5 07:44:57 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module DMux4Way_tb $end
$var wire 1 ! d_cmp $end
$var wire 1 " d $end
$var wire 1 # c_cmp $end
$var wire 1 $ c $end
$var wire 1 % b_cmp $end
$var wire 1 & b $end
$var wire 1 ' a_cmp $end
$var wire 1 ( a $end
$var reg 1 ) fail $end
$var reg 1 * in $end
$var reg 2 + sel [1:0] $end
$scope module DMUX4WAY $end
$var wire 1 * in $end
$var wire 2 , sel [1:0] $end
$var wire 1 - w2 $end
$var wire 1 . w1 $end
$var wire 1 " d $end
$var wire 1 $ c $end
$var wire 1 & b $end
$var wire 1 ( a $end
$scope module dmux0 $end
$var wire 1 * in $end
$var wire 1 / sel $end
$var wire 1 0 notSel $end
$var wire 1 - b $end
$var wire 1 . a $end
$scope module and0 $end
$var wire 1 * a $end
$var wire 1 1 w1 $end
$var wire 1 . out $end
$var wire 1 0 b $end
$scope module nand0 $end
$var wire 1 * a $end
$var wire 1 1 out $end
$var wire 1 0 b $end
$upscope $end
$scope module not0 $end
$var wire 1 1 in $end
$var wire 1 . out $end
$upscope $end
$upscope $end
$scope module and1 $end
$var wire 1 * a $end
$var wire 1 / b $end
$var wire 1 2 w1 $end
$var wire 1 - out $end
$scope module nand0 $end
$var wire 1 * a $end
$var wire 1 / b $end
$var wire 1 2 out $end
$upscope $end
$scope module not0 $end
$var wire 1 2 in $end
$var wire 1 - out $end
$upscope $end
$upscope $end
$scope module not0 $end
$var wire 1 / in $end
$var wire 1 0 out $end
$upscope $end
$upscope $end
$scope module dmux1 $end
$var wire 1 . in $end
$var wire 1 3 sel $end
$var wire 1 4 notSel $end
$var wire 1 & b $end
$var wire 1 ( a $end
$scope module and0 $end
$var wire 1 . a $end
$var wire 1 5 w1 $end
$var wire 1 ( out $end
$var wire 1 4 b $end
$scope module nand0 $end
$var wire 1 . a $end
$var wire 1 5 out $end
$var wire 1 4 b $end
$upscope $end
$scope module not0 $end
$var wire 1 5 in $end
$var wire 1 ( out $end
$upscope $end
$upscope $end
$scope module and1 $end
$var wire 1 . a $end
$var wire 1 3 b $end
$var wire 1 6 w1 $end
$var wire 1 & out $end
$scope module nand0 $end
$var wire 1 . a $end
$var wire 1 3 b $end
$var wire 1 6 out $end
$upscope $end
$scope module not0 $end
$var wire 1 6 in $end
$var wire 1 & out $end
$upscope $end
$upscope $end
$scope module not0 $end
$var wire 1 3 in $end
$var wire 1 4 out $end
$upscope $end
$upscope $end
$scope module dmux2 $end
$var wire 1 - in $end
$var wire 1 7 sel $end
$var wire 1 8 notSel $end
$var wire 1 " b $end
$var wire 1 $ a $end
$scope module and0 $end
$var wire 1 - a $end
$var wire 1 9 w1 $end
$var wire 1 $ out $end
$var wire 1 8 b $end
$scope module nand0 $end
$var wire 1 - a $end
$var wire 1 9 out $end
$var wire 1 8 b $end
$upscope $end
$scope module not0 $end
$var wire 1 9 in $end
$var wire 1 $ out $end
$upscope $end
$upscope $end
$scope module and1 $end
$var wire 1 - a $end
$var wire 1 7 b $end
$var wire 1 : w1 $end
$var wire 1 " out $end
$scope module nand0 $end
$var wire 1 - a $end
$var wire 1 7 b $end
$var wire 1 : out $end
$upscope $end
$scope module not0 $end
$var wire 1 : in $end
$var wire 1 " out $end
$upscope $end
$upscope $end
$scope module not0 $end
$var wire 1 7 in $end
$var wire 1 8 out $end
$upscope $end
$upscope $end
$upscope $end
$scope task check $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1:
19
18
07
16
15
14
03
12
11
10
0/
0.
0-
b0 ,
b0 +
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
$end
#1
04
08
13
17
b1 +
b1 ,
#2
00
14
18
1/
03
07
b10 +
b10 ,
#3
04
08
13
17
b11 +
b11 ,
#4
1(
05
1.
0$
01
19
10
14
18
0-
1'
0/
03
07
12
b0 +
b0 ,
1*
#5
0(
1&
15
06
04
08
0'
1%
13
17
b1 +
b1 ,
#6
1$
09
0.
0(
1-
11
0&
15
02
00
16
14
18
0%
1#
1/
03
07
b10 +
b10 ,
#7
0$
1"
19
04
0:
08
0#
1!
13
17
b11 +
b11 ,
#8
