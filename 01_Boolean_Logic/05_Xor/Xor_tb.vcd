$date
	Tue Nov  5 07:31:37 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module Xor_tb $end
$var wire 1 ! out_cmp $end
$var wire 1 " out $end
$var reg 1 # a $end
$var reg 1 $ b $end
$var reg 1 % fail $end
$scope module XOR $end
$var wire 1 # a $end
$var wire 1 $ b $end
$var wire 1 " out $end
$var wire 1 & notB $end
$var wire 1 ' notAandB $end
$var wire 1 ( notA $end
$var wire 1 ) aAndNotB $end
$scope module and0 $end
$var wire 1 # a $end
$var wire 1 * w1 $end
$var wire 1 ) out $end
$var wire 1 & b $end
$scope module nand0 $end
$var wire 1 # a $end
$var wire 1 * out $end
$var wire 1 & b $end
$upscope $end
$scope module not0 $end
$var wire 1 * in $end
$var wire 1 ) out $end
$upscope $end
$upscope $end
$scope module and1 $end
$var wire 1 $ b $end
$var wire 1 + w1 $end
$var wire 1 ' out $end
$var wire 1 ( a $end
$scope module nand0 $end
$var wire 1 $ b $end
$var wire 1 + out $end
$var wire 1 ( a $end
$upscope $end
$scope module not0 $end
$var wire 1 + in $end
$var wire 1 ' out $end
$upscope $end
$upscope $end
$scope module not0 $end
$var wire 1 # in $end
$var wire 1 ( out $end
$upscope $end
$scope module not1 $end
$var wire 1 $ in $end
$var wire 1 & out $end
$upscope $end
$scope module or0 $end
$var wire 1 ) a $end
$var wire 1 ' b $end
$var wire 1 , w2 $end
$var wire 1 - w1 $end
$var wire 1 " out $end
$scope module nand0 $end
$var wire 1 ) a $end
$var wire 1 ) b $end
$var wire 1 - out $end
$upscope $end
$scope module nand1 $end
$var wire 1 ' a $end
$var wire 1 ' b $end
$var wire 1 , out $end
$upscope $end
$scope module nand2 $end
$var wire 1 - a $end
$var wire 1 , b $end
$var wire 1 " out $end
$upscope $end
$upscope $end
$upscope $end
$scope task check $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
1-
1,
1+
1*
0)
1(
0'
1&
0%
0$
0#
0"
0!
$end
#1
1"
0,
1'
0+
0&
1!
1$
#2
0-
1,
1)
0'
0*
1+
1&
0(
0$
1#
#3
0"
1-
0)
1*
0&
0!
1$
#4
